services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: expense-tracker-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: expense_tracker
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - expense-tracker-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: expense-tracker-backend
    restart: unless-stopped
    environment:
      DATABASE_URL: "postgresql://postgres:postgres123@postgres:5432/expense_tracker?schema=public"
      JWT_SECRET: "your-super-secret-jwt-key-change-this-in-production"
      PORT: 5000
      NODE_ENV: development
      FRONTEND_URL: "http://localhost:3000"
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - expense-tracker-network
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: sh -c "npx prisma migrate deploy && npm run dev"

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: expense-tracker-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - expense-tracker-network
    environment:
      - VITE_API_URL=http://localhost:5000/api

volumes:
  postgres_data:

networks:
  expense-tracker-network:
    driver: bridge
